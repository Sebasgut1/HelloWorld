name: Windows

on:
  push:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows",
            os: windows-latest,
            artifact: "windows",
            build_type: "Release",
            cc: "clang",
            cxx: 'clang++',
            archiver: "zip",
            generators: "Ninja"
          }
    steps:
      - uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NuGetAPIKey }}
          nuget-version: '5.x'
      - run: git config --global core.autocrlf input
      - uses: actions/checkout@v3
      - uses: cygwin/cygwin-install-action@master

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install MPI on windows
        if: startsWith(matrix.config.name, 'Windows')
        shell: cmd
        run: |
          nuget install inteltbb.devel.win
          #curl -L -O https://registrationcenter-download.intel.com/akdlm/IRC_NAS/18851/w_BaseKit_p_2022.3.0.9573.exe
          #.\w_BaseKit_p_2022.3.0.9573.exe --s
          echo "Finished"
        
          
      #- name: Print Microsoft MPI Env
      # if: startsWith(matrix.config.name, 'Windows')
      # run: |
       #     gcc -v
        #  curl -L -O https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisetup.exe
         # curl -L -O https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisdk.msi
          #msmpisdk.msi /quiet
          #.\msmpisetup.exe -unattend -force
      #   printenv | grep "WIN\|MSMPI"
      #   cygpath -ms 'C:\Program Files\Microsoft MPI\Bin\'
      #   cygpath -u 'C:/PROGRA~1/MICROS~2/Bin/'
      #   export PATH=$PATH:/c/PROGRA~1/MICROS~2/Bin/

      - name: Build Bitpit
        if: startsWith(matrix.config.name, 'Windows')
        run: |
          git clone --depth 1 --single-branch --branch mimic-devel https://github.com/optimad/bitpit.git
          cd bitpit
          mkdir build
          cd build
          cmake -G "Visual Studio 17 2022" -A x64 -DBITPIT_ENABLE_MPI=ON -DBITPIT_VERBOSE_MAKE=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../../bitpit_install -DPETSC_DIR=/d/a/_temp/msys64/mingw64/src/petsc-3.17.3 -DPETSC_ARCH=dmo -DPETSC_CURRENT=ON ../
          echo "MAKEEEEEEEEE"
          cmake --build . --config Release
          echo "MAKEEEEEEEEE INSTALL"
          cmake --install . --config Release
          dir ..